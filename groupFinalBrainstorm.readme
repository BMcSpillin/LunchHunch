PRESENTATION SCRIPT

BRIDGET: How many decisions do you think you've made by noon each day?  More than you would think.  And it's exhausting.

TING: Mike! You ready for lunch?  What do you want to eat today?

MIKE: Eeh, I don't know.

TING: We could look on Yelp!

MIKE: But they have so many options!

TING: Why don't we order something on GrubHub?

MIKE: Aah, I always wish I got something else by the time the delivery guy gets here.

BRIDGET: By the time lunch rolls around each day, the average person has made approximately XX decisions.  And with every trivial decision made, a critical decision loses its weight.  If Mike decides what he's having for lunch right now, he is scientifically proven to be more likely to make a poor decision later, when it counts.  Perhaps he'll engage a troll on Facebook or Stack Overflow.  Perhaps he will call an ex. And these unfortunate scenarios can be chalked up to "decision fatigue."

TING: Wait! I have an idea!
//////opens up wtfsigte.com..........Mike looks confused and upset/////////

MIKE: Ouch!  And what does that even have to do with me?

TING: Okay, I have something better.  ////opens up LUNCH HUNCH ////

/////
Ting guides him through the questions, which he answers, and their decision is made.
Maybe Mike even says:
MIKE: This is fun!  It's kind of like Tinder!
////

BRIDGET: With Lunch Hunch, you don't have to know what you want, because we do.

MIKE////////////////////////////////
Talks about Geocoder

BRIDGET///////////////////////////
Talks about Yelp! API

TING//////////////////////////////
Talks about our biggest challenges

/////////////then we open the floor for questions////////////////////



LUNCH HUNCH: What's for lunch?
GOAL: To make a decision for an indecisive user with a short lunch break and a big appetite

research:
wtfsigte.com
Yelp! without the reviews and the indecision
Tinder for food

MVP
*****INPUT*****
USER
-Location-based
-Populate a Menu
-Data collection
    -distance to travel
    -Location
    -WE ASSUME <= 1 mile
  -Daily changing user data
    -weather
    -mood
    -exercise
    -eat-in or take-out
    -price
    -spiciness (frisky?)

location: string
mood: boolean
weather:
healthfulness: 



WEB
-Get local restaurants
-Scrape menus (and maybe reviews)


MAYBE JUST PICK A SINGLE PLACE FOR PRESENTATION

*****OUTPUT*****
To match user data with information collected from the web
To select one restaurant that meets their needs




*****FUTURE GOALS*****
Medium Forward
  -Have weather respond to API rather than question
  -Get current location using GPS
  -Walking or driving?
  -How far?

Future Forward
  -Consistent user profile data
    -allergies/dietary restrictions
    -preferences (general and comfort food)
  Save former "likes"
  Save recently eaten lunches
  Pare down menu for user preferences
  Machine learning <---way future forward

  ALGORITHM

APIs of use

Hoppit
Yelp!
Google Maps



location services
api
explicit user model and views

allergy
mood
weather
(pick one)

What to include/exclude from the API

###ONBOARDING
Getting people to sign up... process

1. User hits homepage
2. Acquire user location (GPS API or input)
  a) Array contains all food categories
3. Allergies? a) b) c) d) e)
  a) contains all options less allergies
4. Weather a) sweaty b) brr
  a) keep salad, wraps, subs etc.
  b) keep soup, ramen, American...
5. Are you happy today? a) Sure / b) Meh
  a) Array hasn't changed
  b) Array contains only comfort food
    -we have made assumptions and hard coded this
6. Healthy food?
  a)
  b)
7. Spiciness 
  a) spicy
  b) mild
8. In debt? Rich?  How deep are your pockets? a) money b) broke
  a)
  b)

COLUMNS
location: string
allergies: string
weather: boolean

happy: boolean
healthy: boolean
spicy: boolean
debt: boolean

BRIDGET NOTES SUNDAY NIGHT
-We probably want to take the words "mobie app" off the app, since Yelp! had additional display requirements.  Anyway, it is technically a mobile-friendly web application.
-By the way, have we done any media queries so this actually can be used on a phone?
-I'm not into this "Lunch Look" thing.  Sounds like fashion.  I think "What's for Lunch" is fine?  What about "Lunch Hunch" if we want to use literary devices
-Does it have to be red white and blue? :-/
-I took the word "grub" off because GrubHub basically owns it.
-The logo should say something like "Powered by" before it, so it doesn't look like the app belongs to Yelp!.

///display requirements that pertain to us///
Wherever you display information from the API, you’ll also need to display our logo (see below) in a manner that’s obvious to the casual user that the information originates from Yelp.
Fully attribute your use of our content by linking directly to the applicable Yelp pages.
You always need to display our aggregate star rating graphics and the number of reviews on which they’re based.
If you display Yelp Deals or Yelp Certificates, you must attribute each Yelp Deal or Yelp Certificate to Yelp by displaying our logo or our name “Yelp” in text next to each Yelp Deal or Yelp Certificate.